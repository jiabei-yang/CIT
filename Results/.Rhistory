mean))
}
colnames(summ) <- colnames(res)[c(6, 7, 10, 11, 18, 19)]
best.combs <- sort((rank(summ[1:42, 1]) + rank(summ[1:42 + 42, 1])) / 2)[1:10]
best.combs <- sub("Heterogeneous ", "", names(best.combs))
summ.homo <- summ[1:42 + 42, ]
rownames(summ.homo) <- sub("Homogeneous ", "", rownames(summ.homo))
summ.hetero <- summ[1:42, ]
rownames(summ.hetero) <- sub("Heterogeneous ", "", rownames(summ.hetero))
summ.select <- rbind(summ.homo[rownames(summ.homo) %in% best.combs, ],
summ.hetero[rownames(summ.hetero) %in% best.combs, ])
# Generate the Latex code
summ.latex <- data.frame(Method = rownames(summ.select),
round(summ.select, 2))
summ.latex <- data.frame(summ.latex[1:10, ], NA, summ.latex[11:20, 2:7])
summ.latex <- summ.latex %>%
select(-corr.frst.splt)
summ.latex <- summ.latex[match(best.combs, summ.latex$Method), ]
View(summ.latex)
load("../Data/main.RData")
##################################################################################################
########################################### Figure ###############################################
##################################################################################################
res.ct <- res %>%
filter(est.mthd %in% c("CT", "CT.default"))
res.ct <- res.ct %>%
mutate(Algorithm = ifelse(est.mthd == "CT", "Best CT", NA)) %>%
mutate(Algorithm = ifelse(est.mthd == "CT.default", "Original CT", Algorithm)) %>%
mutate(Method = ifelse(Method == "Misspecified.Honest", "Mis Cov Honest", Method)) %>%
mutate(Method = ifelse(Method == "Noisy.Honest", "Mis Func Honest", Method)) %>%
mutate(Method = ifelse(Method == "True.Honest", "True Honest", Method)) %>%
mutate(Method = ifelse(Method == "Misspecified.NoHonest", "Mis Cov Regular", Method)) %>%
mutate(Method = ifelse(Method == "Noisy.NoHonest", "Mis Func Regular", Method)) %>%
mutate(Method = ifelse(Method == "True.NoHonest", "True Regular", Method))
res.ct <- res.ct %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.ct <- res.ct %>%
mutate(Method    = factor(Method, levels(res.ct$Method)[c(2, 4, 6, 1, 3, 5)])) %>%
mutate(setting   = factor(setting, levels(res.ct$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.ct$Algorithm)[c(2, 1)]))
res.ct <- res.ct %>%
mutate(color.method = ifelse(grepl("Regular", Method), "Regular", "Honest"))
res.ct <- res.ct %>%
mutate(Method = sub(" Regular", "", Method)) %>%
mutate(Method = sub(" Honest", "", Method))
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7", "#F0E442")
ggplot(res.ct, aes(Method, mse, group = paste(Method, color.method, sep = "."))) +
geom_boxplot(outlier.size = 0.3, size = 0.3, aes(color = color.method)) +
ylab("MSE") +
facet_grid(setting ~ Algorithm, scales = "free_x", space = "free_x") +
theme_bw() +
# theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10(limits = c(2e-9, 2e4)) +
scale_colour_manual(values = cbbPalette,
name = "Algorithms",
breaks = c("Honest", "Regular"),
labels = c("Honest", "Regular")) +
theme(legend.position = "bottom")
load("../Data/main.RData")
# Average running time
summ.select <- NULL
summ.select <- cbind(summ.select,
tapply(res.select[, 16],
paste(res.select$setting, res.select$Algorithm, res.select$Method, sep = " "),
mean,
na.rm = T))
colnames(summ.select) <- colnames(res.select)[16]
summ.select <- data.frame(summ.select[c(c(15:17, 1:3, c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6)) + 17, c(15:17, 1:3, c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6))), ])
load("../Data/main.RData")
##################################################################################################
############################################ Table ###############################################
##################################################################################################
res.select <- res %>%
filter(Method %in% c("True.NoHonest", "Noisy.NoHonest", "Misspecified.NoHonest",
"InNode.True.CV1", "InNode.Noisy.CV1", "InNode.Misspecified.CV1",
"InNode.TrueIPW.TrueAdj.CV1", "InNode.NoisyIPW.TrueAdj.CV1",
"InNode.TrueIPW.NoisyAdj.CV1", "InNode.NoisyIPW.NoisyAdj.CV1",
"InNode.MisspecifiedIPW.MisspecifiedAdj.CV1")) %>%
filter(!is.na(mse))
res.select <- res.select %>%
mutate(Method = paste(est.mthd, Method, sep = " "))
res.select <- res.select %>%
mutate(Algorithm = ifelse(est.mthd == "CT", "Best CT", NA)) %>%
mutate(Algorithm = ifelse(est.mthd == "CT.default", "Original CT", Algorithm)) %>%
mutate(Algorithm = ifelse(grepl("CV1", Method), "Observational Data IT", Algorithm)) %>%
mutate(Method = ifelse(Method == "CT Misspecified.NoHonest", "Misspecified CT", Method)) %>%
mutate(Method = ifelse(Method == "CT Noisy.NoHonest", "CT", Method)) %>%
mutate(Method = ifelse(Method == "CT True.NoHonest", "True CT", Method)) %>%
mutate(Method = ifelse(Method == "CT.default Misspecified.NoHonest", "Misspecified CT", Method)) %>%
mutate(Method = ifelse(Method == "CT.default Noisy.NoHonest", "CT", Method)) %>%
mutate(Method = ifelse(Method == "CT.default True.NoHonest", "True CT", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Misspecified", Method), "Misspecified IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Noisy", Method), "IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.True", Method), "True IPW", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Misspecified", Method), "Misspecified G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Noisy", Method), "G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.True", Method), "True G", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.NoisyAdj", Method), "DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.NoisyAdj", Method), "True.Propensity DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.TrueAdj", Method), "True.Mean DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.TrueAdj", Method), "Both True DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.MisspecifiedIPW.MisspecifiedAdj", Method), "Both Misspecified DR", Method))
res.select <- res.select %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.select <- res.select %>%
mutate(Method    = factor(Method, levels(res.select$Method)[c(7, 3, 10, 9, 6, 12, 8, 5, 11, 1, 4, 14, 13, 2)])) %>%
mutate(setting   = factor(setting, levels(res.select$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.select$Algorithm)[c(3, 1, 2)]))
levels(res.select$Method) <- c("Mis Cov CT", "Mis Func CT", "True CT",
"Mis Cov IPW", "Mis Func IPW", "True IPW",
"Mis Cov G", "Mis Func G", "True G",
"Both Mis Cov DR", "Both Mis Func DR", "True Prop Mis Func Out DR",
"True Out Mis Func Prop DR", "Both True DR")
res.select <- res.select %>%
mutate(color.method = ifelse(est.mthd == "CT.default", "CT", as.character(est.mthd)))
# Average running time
summ.select <- NULL
summ.select <- cbind(summ.select,
tapply(res.select[, 16],
paste(res.select$setting, res.select$Algorithm, res.select$Method, sep = " "),
mean,
na.rm = T))
colnames(summ.select) <- colnames(res.select)[16]
summ.select <- data.frame(summ.select[c(c(15:17, 1:3, c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6)) + 17, c(15:17, 1:3, c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6))), ])
round(summ.select, 2)
# Generate the Latex code
summ.latex <- data.frame(Method = rownames(summ.select),
Time   = round(summ.select, 2))
colnames(summ.latex)[2] <- "Time"
summ.latex <- summ.latex %>%
mutate(Method = sub("Homogeneous ", "", Method)) %>%
mutate(Method = sub("Heterogeneous ", "", Method))
summ.latex <- summ.latex %>%
mutate(Estimator = ifelse(grepl("IPW", Method), "IPW", NA)) %>%
mutate(Estimator = ifelse(grepl("G", Method), "G", Estimator)) %>%
mutate(Estimator = ifelse(grepl("DR", Method), "DR", Estimator)) %>%
mutate(Estimator = ifelse(grepl("CT", Method), "CT", Estimator))
summ.latex <- summ.latex %>%
mutate(Method = sub("Observational Data IT", "", Method)) %>%
mutate(Method = sub("Original CT", "", Method)) %>%
mutate(Method = sub("Best CT", "", Method))
summ.latex <- summ.latex %>%
mutate(Method = sub(" IPW", "", Method)) %>%
mutate(Method = sub(" G", "", Method)) %>%
mutate(Method = sub(" DR", "", Method)) %>%
mutate(Method = sub(" CT", "", Method))
summ.latex <- summ.latex[, c(3, 1:2)]
summ.latex <- data.frame(summ.latex[1:17, ], NA, summ.latex[18:34, 3])
colnames(summ.latex)[5] <- "Time"
View(summ.latex)
load("../Data/main.RData")
##################################################################################################
############################################ CV2 #################################################
##################################################################################################
res.cv2 <- res %>%
filter(Method %in% c("True.NoHonest", "Noisy.NoHonest", "Misspecified.NoHonest",
"InNode.True.CV2", "InNode.Noisy.CV2", "InNode.Misspecified.CV2",
"InNode.TrueIPW.TrueAdj.CV2", "InNode.NoisyIPW.TrueAdj.CV2",
"InNode.TrueIPW.NoisyAdj.CV2", "InNode.NoisyIPW.NoisyAdj.CV2",
"InNode.MisspecifiedIPW.MisspecifiedAdj.CV2")) %>%
filter(!is.na(mse))
res.cv2 <- res.cv2 %>%
filter(est.mthd != "CT.default")
res.cv2 <- res.cv2 %>%
mutate(Method = paste(est.mthd, Method, sep = " "))
res.cv2 <- res.cv2 %>%
mutate(Algorithm = ifelse(est.mthd == "CT", "Best CT", NA)) %>%
mutate(Algorithm = ifelse(grepl("CV2", Method), "Alternative FTS", Algorithm)) %>%
mutate(Method = ifelse(Method == "CT Misspecified.NoHonest", "Misspecified CT", Method)) %>%
mutate(Method = ifelse(Method == "CT Noisy.NoHonest", "CT", Method)) %>%
mutate(Method = ifelse(Method == "CT True.NoHonest", "True CT", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Misspecified", Method), "Misspecified IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Noisy", Method), "IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.True", Method), "True IPW", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Misspecified", Method), "Misspecified G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Noisy", Method), "G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.True", Method), "True G", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.NoisyAdj", Method), "DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.NoisyAdj", Method), "True.Propensity DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.TrueAdj", Method), "True.Mean DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.TrueAdj", Method), "Both True DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.MisspecifiedIPW.MisspecifiedAdj", Method), "Both Misspecified DR", Method))
res.cv2 <- res.cv2 %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.cv2 <- res.cv2 %>%
mutate(Method    = factor(Method, levels(res.cv2$Method)[c(7, 3, 10, 9, 6, 12, 8, 5, 11, 1, 4, 14, 13, 2)])) %>%
mutate(setting   = factor(setting, levels(res.cv2$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.cv2$Algorithm)[c(2, 1)]))
levels(res.cv2$Method) <- c("Mis Cov CT", "Mis Func CT", "True CT",
"Mis Cov IPW", "Mis Func IPW", "True IPW",
"Mis Cov G", "Mis Func G", "True G",
"Both Mis Cov DR", "Both Mis Func DR", "True Prop Mis Func Out DR",
"True Out Mis Func Prop DR", "Both True DR")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7", "#F0E442")
ggplot(res.cv2, aes(Method, mse)) +
geom_boxplot(outlier.size = 0.9, aes(color = est.mthd)) +
ylab("MSE") +
facet_grid(setting ~ Algorithm, scales = "free_x", space = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10(limits = c(2e-9, 2e4)) +
scale_colour_manual(values = cbbPalette,
name = "Algorithms",
breaks = c("CT", "IPW", "G", "DR"),
labels = c("CT", "IPW", "G", "DR")) +
theme(legend.position = "bottom")
summ.select <- NULL
for (i in c(5, 8, 9, 16, 17)){
summ.select <- cbind(summ.select,
tapply(res.cv2[, i],
paste(res.cv2$setting, res.cv2$Algorithm, res.cv2$Method, sep = " "),
mean,
na.rm = T))
}
colnames(summ.select) <- colnames(res.cv2)[c(5, 8, 9, 16, 17)]
summ.select <- summ.select[c(c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6) - 3 + 14, c(8, 10, 12, 7, 9, 11, 4, 5, 14, 13, 6) - 3), ]
round(summ.select, 2)
# Generate the Latex code
summ.latex <- data.frame(Method = rownames(summ.select),
round(summ.select, 2))
summ.latex <- summ.latex %>%
mutate(Method = sub("Homogeneous ", "", Method)) %>%
mutate(Method = sub("Heterogeneous ", "", Method))
summ.latex <- summ.latex %>%
mutate(Estimator = ifelse(grepl("IPW", Method), "IPW", NA)) %>%
mutate(Estimator = ifelse(grepl("G", Method), "G", Estimator)) %>%
mutate(Estimator = ifelse(grepl("DR", Method), "DR", Estimator))
summ.latex <- summ.latex %>%
mutate(Method = sub(" IPW", "", Method)) %>%
mutate(Method = sub(" G", "", Method)) %>%
mutate(Method = sub(" DR", "", Method)) %>%
mutate(Method = sub("Alternative FTS", "", Method))
summ.latex <- summ.latex[, c(7, 1:6)]
summ.latex <- data.frame(summ.latex[1:11, ], NA, summ.latex[12:22, 3:7])
summ.latex <- summ.latex %>%
select(-corr.frst.splt)
View(summ.latex)
load("../Data/AppendixC5Out.RData")
##################################################################################################
######################################## Out (Appendix C.5) ######################################
##################################################################################################
res.select <- res %>%
filter(Method %in% c("True.NoHonest", "Noisy.NoHonest", "Misspecified.NoHonest",
"Out.True.CV1", "Out.Noisy.CV1", "Out.Misspecified.CV1",
"Out.TrueIPW.TrueAdj.CV1", "Out.NoisyIPW.TrueAdj.CV1",
"Out.TrueIPW.NoisyAdj.CV1", "Out.NoisyIPW.NoisyAdj.CV1",
"Out.MisspecifiedIPW.MisspecifiedAdj.CV1",
"Out.True.CV2", "Out.Noisy.CV2", "Out.Misspecified.CV2",
"Out.TrueIPW.TrueAdj.CV2", "Out.NoisyIPW.TrueAdj.CV2",
"Out.TrueIPW.NoisyAdj.CV2", "Out.NoisyIPW.NoisyAdj.CV2",
"Out.MisspecifiedIPW.MisspecifiedAdj.CV2"))
res.select <- res.select %>%
mutate(Method = paste(est.mthd, Method, sep = " "))
res.select <- res.select %>%
mutate(Algorithm = ifelse(est.mthd == "CT", "Best CT", NA)) %>%
mutate(Algorithm = ifelse(grepl("CV1", Method), "Main FTS", Algorithm)) %>%
mutate(Algorithm = ifelse(grepl("CV2", Method), "Alternative FTS", Algorithm)) %>%
mutate(Method = ifelse(Method == "CT Misspecified.NoHonest", "Misspecified CT", Method)) %>%
mutate(Method = ifelse(Method == "CT Noisy.NoHonest", "CT", Method)) %>%
mutate(Method = ifelse(Method == "CT True.NoHonest", "True CT", Method)) %>%
mutate(Method = ifelse(grepl("IPW Out.Misspecified", Method), "Misspecified IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW Out.Noisy", Method), "IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW Out.True", Method), "True IPW", Method)) %>%
mutate(Method = ifelse(grepl("G Out.Misspecified", Method), "Misspecified G", Method)) %>%
mutate(Method = ifelse(grepl("G Out.Noisy", Method), "G", Method)) %>%
mutate(Method = ifelse(grepl("G Out.True", Method), "True G", Method)) %>%
mutate(Method = ifelse(grepl("DR Out.NoisyIPW.NoisyAdj", Method), "DR", Method)) %>%
mutate(Method = ifelse(grepl("DR Out.TrueIPW.NoisyAdj", Method), "True.Propensity DR", Method)) %>%
mutate(Method = ifelse(grepl("DR Out.NoisyIPW.TrueAdj", Method), "True.Mean DR", Method)) %>%
mutate(Method = ifelse(grepl("DR Out.TrueIPW.TrueAdj", Method), "Both True DR", Method)) %>%
mutate(Method = ifelse(grepl("DR Out.MisspecifiedIPW.MisspecifiedAdj", Method), "Both Misspecified DR", Method))
res.select <- res.select %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.select <- res.select %>%
mutate(Method    = factor(Method, levels(res.select$Method)[c(7, 3, 10, 9, 6, 12, 8, 5, 11, 1, 4, 14, 13, 2)])) %>%
mutate(setting   = factor(setting, levels(res.select$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.select$Algorithm)[c(2, 3, 1)]))
levels(res.select$Method) <- c("Mis Cov CT", "Mis Func CT", "True CT",
"Mis Cov IPW", "Mis Func IPW", "True IPW",
"Mis Cov G", "Mis Func G", "True G",
"Both Mis Cov DR", "Both Mis Func DR", "True Prop Mis Func Out DR",
"True Out Mis Func Prop DR", "Both True DR")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7", "#F0E442")
ggplot(res.select, aes(Method, mse)) +
geom_boxplot(outlier.size = 0.9, aes(color = est.mthd)) +
ylab("MSE") +
facet_grid(setting ~ Algorithm, scales = "free_x", space = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10(limits = c(2e-9, 2e4)) +
scale_colour_manual(values = cbbPalette,
name = "Algorithms",
breaks = c("CT", "IPW", "G", "DR"),
labels = c("CT", "IPW", "G", "DR")) +
theme(legend.position = "bottom") +
ggtitle("When models are fitted using the whole dataset")
summ.select <- NULL
for (i in c(5, 8, 9, 16, 17)){
summ.select <- cbind(summ.select,
tapply(res.select[, i],
paste(res.select$setting, res.select$Algorithm, res.select$Method, sep = " "),
mean,
na.rm = T))
}
colnames(summ.select) <- colnames(res.select)[c(5, 8, 9, 16, 17)]
summ.select <- summ.select[c(c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 14 + 25, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 25, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 14, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3)), ]
# Generate the table in latex code for paper
summ.latex <- data.frame(Method = rownames(summ.select),
round(summ.select, 2))
summ.latex <- summ.latex %>%
mutate(Method = sub("Homogeneous ", "", Method)) %>%
mutate(Method = sub("Heterogeneous ", "", Method))
summ.latex <- summ.latex %>%
mutate(Estimator = ifelse(grepl("IPW", Method), "IPW", NA)) %>%
mutate(Estimator = ifelse(grepl("G", Method), "G", Estimator)) %>%
mutate(Estimator = ifelse(grepl("DR", Method), "DR", Estimator))
summ.latex <- summ.latex %>%
mutate(Method = sub(" IPW", "", Method)) %>%
mutate(Method = sub(" G", "", Method)) %>%
mutate(Method = sub(" DR", "", Method)) %>%
mutate(Method = sub("Main FTS ", "", Method)) %>%
mutate(Method = sub("Alternative FTS", "", Method))
summ.latex <- summ.latex[, c(7, 1:6)]
summ.latex <- data.frame(summ.latex[1:22, ], NA, summ.latex[23:44, 3:7])
summ.latex <- summ.latex %>%
select(-corr.frst.splt)
View(summ.latex)
load("../Data/AppendixC5Insplit.RData")
##################################################################################################
####################################### Insplit (Appendix C.5) ###################################
##################################################################################################
res.select <- res %>%
filter(Method %in% c("True.NoHonest", "Noisy.NoHonest", "Misspecified.NoHonest",
"InSplit.True.CV1", "InSplit.Noisy.CV1", "InSplit.Misspecified.CV1",
"InSplit.TrueIPW.TrueAdj.CV1", "InSplit.NoisyIPW.TrueAdj.CV1",
"InSplit.TrueIPW.NoisyAdj.CV1", "InSplit.NoisyIPW.NoisyAdj.CV1",
"InSplit.MisspecifiedIPW.MisspecifiedAdj.CV1",
"InSplit.True.CV2", "InSplit.Noisy.CV2", "InSplit.Misspecified.CV2",
"InSplit.TrueIPW.TrueAdj.CV2", "InSplit.NoisyIPW.TrueAdj.CV2",
"InSplit.TrueIPW.NoisyAdj.CV2", "InSplit.NoisyIPW.NoisyAdj.CV2",
"InSplit.MisspecifiedIPW.MisspecifiedAdj.CV2"))
res.select <- res.select %>%
mutate(Method = paste(est.mthd, Method, sep = " "))
res.select <- res.select %>%
mutate(Algorithm = ifelse(est.mthd == "CT", "Best CT", NA)) %>%
mutate(Algorithm = ifelse(grepl("CV1", Method), "Main FTS", Algorithm)) %>%
mutate(Algorithm = ifelse(grepl("CV2", Method), "Alternative FTS", Algorithm)) %>%
mutate(Method = ifelse(Method == "CT Misspecified.NoHonest", "Misspecified CT", Method)) %>%
mutate(Method = ifelse(Method == "CT Noisy.NoHonest", "CT", Method)) %>%
mutate(Method = ifelse(Method == "CT True.NoHonest", "True CT", Method)) %>%
mutate(Method = ifelse(grepl("IPW InSplit.Misspecified", Method), "Misspecified IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InSplit.Noisy", Method), "IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InSplit.True", Method), "True IPW", Method)) %>%
mutate(Method = ifelse(grepl("G InSplit.Misspecified", Method), "Misspecified G", Method)) %>%
mutate(Method = ifelse(grepl("G InSplit.Noisy", Method), "G", Method)) %>%
mutate(Method = ifelse(grepl("G InSplit.True", Method), "True G", Method)) %>%
mutate(Method = ifelse(grepl("DR InSplit.NoisyIPW.NoisyAdj", Method), "DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InSplit.TrueIPW.NoisyAdj", Method), "True.Propensity DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InSplit.NoisyIPW.TrueAdj", Method), "True.Mean DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InSplit.TrueIPW.TrueAdj", Method), "Both True DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InSplit.MisspecifiedIPW.MisspecifiedAdj", Method), "Both Misspecified DR", Method))
res.select <- res.select %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.select <- res.select %>%
mutate(Method    = factor(Method, levels(res.select$Method)[c(7, 3, 10, 9, 6, 12, 8, 5, 11, 1, 4, 14, 13, 2)])) %>%
mutate(setting   = factor(setting, levels(res.select$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.select$Algorithm)[c(2, 3, 1)]))
levels(res.select$Method) <- c("Mis Cov CT", "Mis Func CT", "True CT",
"Mis Cov IPW", "Mis Func IPW", "True IPW",
"Mis Cov G", "Mis Func G", "True G",
"Both Mis Cov DR", "Both Mis Func DR", "True Prop Mis Func Out DR",
"True Out Mis Func Prop DR", "Both True DR")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7", "#F0E442")
ggplot(res.select, aes(Method, mse)) +
geom_boxplot(outlier.size = 0.9, aes(color = est.mthd)) +
ylab("MSE") +
facet_grid(setting ~ Algorithm, scales = "free_x", space = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_log10(limits = c(2e-9, 2e4)) +
scale_colour_manual(values = cbbPalette,
name = "Algorithms",
breaks = c("CT", "IPW", "G", "DR"),
labels = c("CT", "IPW", "G", "DR")) +
theme(legend.position = "bottom") +
ggtitle("When models are fitted separately in the left and right subgroups")
summ.select <- NULL
for (i in c(5, 8, 9, 16, 17)){
summ.select <- cbind(summ.select,
tapply(res.select[, i],
paste(res.select$setting, res.select$Algorithm, res.select$Method, sep = " "),
mean,
na.rm = T))
}
colnames(summ.select) <- colnames(res.select)[c(5, 8, 9, 16, 17)]
summ.select <- summ.select[c(c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 14 + 25, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 25, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 14, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3)), ]
# Generate the table in latex code for paper
summ.latex <- data.frame(Method = rownames(summ.select),
round(summ.select, 2))
summ.latex <- summ.latex %>%
mutate(Method = sub("Homogeneous ", "", Method)) %>%
mutate(Method = sub("Heterogeneous ", "", Method))
summ.latex <- summ.latex %>%
mutate(Estimator = ifelse(grepl("IPW", Method), "IPW", NA)) %>%
mutate(Estimator = ifelse(grepl("G", Method), "G", Estimator)) %>%
mutate(Estimator = ifelse(grepl("DR", Method), "DR", Estimator))
summ.latex <- summ.latex %>%
mutate(Method = sub(" IPW", "", Method)) %>%
mutate(Method = sub(" G", "", Method)) %>%
mutate(Method = sub(" DR", "", Method)) %>%
mutate(Method = sub("Main FTS ", "", Method)) %>%
mutate(Method = sub("Alternative FTS", "", Method))
summ.latex <- summ.latex[, c(7, 1:6)]
summ.latex <- data.frame(summ.latex[1:22, ], NA, summ.latex[23:44, 3:7])
summ.latex <- summ.latex %>%
select(-corr.frst.splt)
View(summ.latex)
load("../Data/AppendixC6_BinMixed.RData")
##################################################################################################
################################## MSE Figure (Appendix C.6) #####################################
##################################################################################################
res.select <- res %>%
filter(!(Method %in% c("True.Honest", "Noisy.Honest", "Misspecified.Honest")))
res.select <- res.select %>%
mutate(Method = paste(est.mthd, Method, sep = " "))
res.select <- res.select %>%
mutate(Algorithm = as.character(est.mthd)) %>%
mutate(Algorithm = ifelse(grepl("CV1", Method), "Main FTS", Algorithm)) %>%
mutate(Algorithm = ifelse(grepl("CV2", Method), "Alternative FTS", Algorithm)) %>%
mutate(Method = ifelse(grepl("CT Misspecified.NoHonest", Method), "Misspecified CT", Method)) %>%
mutate(Method = ifelse(grepl("CT Noisy.NoHonest", Method), "CT", Method)) %>%
mutate(Method = ifelse(grepl("CT True.NoHonest", Method), "True CT", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Misspecified", Method), "Misspecified IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.Noisy", Method), "IPW", Method)) %>%
mutate(Method = ifelse(grepl("IPW InNode.True", Method), "True IPW", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Misspecified", Method), "Misspecified G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.Noisy", Method), "G", Method)) %>%
mutate(Method = ifelse(grepl("G InNode.True", Method), "True G", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.NoisyAdj", Method), "DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.NoisyAdj", Method), "True.Propensity DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.NoisyIPW.TrueAdj", Method), "True.Mean DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.TrueIPW.TrueAdj", Method), "Both True DR", Method)) %>%
mutate(Method = ifelse(grepl("DR InNode.MisspecifiedIPW.MisspecifiedAdj", Method), "Both Misspecified DR", Method))
res.select <- res.select %>%
mutate(Method    = factor(Method)) %>%
mutate(Algorithm = factor(Algorithm))
res.select <- res.select %>%
mutate(Method = factor(Method, levels(res.select$Method)[c(7, 3, 10, 9, 6, 12, 8, 5, 11, 1, 4, 14, 13, 2)])) %>%
# mutate(Method = factor(Method, levels(res.select$Method)[c(7, 5, 9, 6, 4, 8, 1, 3, 11, 10, 2)])) %>%
mutate(setting = factor(setting, levels(res.select$setting)[c(2, 1)])) %>%
mutate(Algorithm = factor(Algorithm, levels(res.select$Algorithm)[c(4, 2, 3, 1)]))
res.select <- res.select %>%
mutate(color.method = ifelse(grepl("CT", est.mthd), "CT", as.character(est.mthd)))
levels(res.select$Method) <- c("Mis Cov CT", "Mis Func CT", "True CT",
"Mis Cov IPW", "Mis Func IPW", "True IPW",
"Mis Cov G", "Mis Func G", "True G",
"Both Mis Cov DR", "Both Mis Func DR", "True Prop Mis Func Out DR",
"True Out Mis Func Prop DR", "Both True DR")
cbbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7", "#F0E442")
ggplot(res.select, aes(Method, mse)) +
geom_boxplot(outlier.size = 0.9, aes(color = color.method)) +
ylab("MSE") +
facet_grid(setting ~ Algorithm, scales = "free_x", space = "free_x") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_sqrt() +
scale_colour_manual(values = cbbPalette,
name = "Algorithms",
labels = c("CT", "IPW CAIT", "G CAIT", "DR CAIT")) +
theme(legend.position = "bottom")  +
ggtitle("Binary outcome with both continuous and categorical covariates")
summ.select <- NULL
for (i in c(5, 8, 9, 16, 17)){
summ.select <- cbind(summ.select,
tapply(res.select[, i],
paste(res.select$setting, res.select$Algorithm, res.select$Method, sep = " "),
mean,
na.rm = T))
}
colnames(summ.select) <- colnames(res.select)[c(5, 8, 9, 16, 17)]
summ.select <- summ.select[c(1:3 + 11*2 + 3 + 28, 1:3 + 11 + 28, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 28 + 14, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 28, 1:3 + 11*2 + 3, 1:3 + 11, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3) + 14, c(5, 7, 9, 4, 6, 8, 1, 2, 11, 10, 3)), ]
# Generate the table in latex code for paper
summ.latex <- data.frame(Method = rownames(summ.select),
round(summ.select, 2))
summ.latex <- summ.latex %>%
mutate(Method = sub("Homogeneous ", "", Method)) %>%
mutate(Method = sub("Heterogeneous ", "", Method))
summ.latex <- summ.latex %>%
mutate(Estimator = ifelse(grepl("IPW", Method), "IPW", NA)) %>%
mutate(Estimator = ifelse(grepl("G", Method), "G", Estimator)) %>%
mutate(Estimator = ifelse(grepl("DR", Method), "DR", Estimator)) %>%
mutate(Estimator = ifelse(grepl("Original CT", Method), "Original CT", Estimator))%>%
mutate(Estimator = ifelse(grepl("Best CT", Method), "Best CT", Estimator))
summ.latex <- summ.latex %>%
mutate(Method = sub(" IPW", "", Method)) %>%
mutate(Method = sub(" G", "", Method)) %>%
mutate(Method = sub(" DR", "", Method)) %>%
mutate(Method = sub("Main FTS ", "", Method)) %>%
mutate(Method = sub("Alternative FTS ", "", Method)) %>%
mutate(Method = sub("Original CT ", "", Method)) %>%
mutate(Method = sub("Best CT ", "", Method)) %>%
mutate(Method = sub(" CT", "", Method))
summ.latex <- summ.latex[, c(7, 1:6)]
summ.latex <- data.frame(summ.latex[1:28, ], NA, summ.latex[29:56, 3:7])
summ.latex <- summ.latex %>%
select(-corr.frst.splt)
View(summ.latex)
